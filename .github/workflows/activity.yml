name: Github Metrics

permissions:
  contents: write

on:
  # Schedule updates (At 12:00 on every 2nd day-of-month from 1 through 30.)
  # https://crontab.guru/#0_12_1-30/2_*_*
  schedule: [{cron: "0 12 1-30/2 * *"}]
  # Lines below let you run workflow manually and on each commit
  workflow_dispatch:
  push:
    branches:
      - main
      - master
jobs:
  github-metrics:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🦑 Follow
        if: ${{ success() || failure() }}
        uses: lowlighter/metrics@latest
        with:
          filename: images/follow.svg
          token: ${{ secrets.METRICS_TOKEN }}
          base: ""
          output_action: none
          output_condition: data-changed
          plugin_people: yes
          plugin_people_limit: 24
          plugin_people_size: 28
          plugin_people_types: followers, following
          plugin_people_shuffle: yes


      - name: 🦑 Code Snippets Day
        if: ${{ success() || failure() }}
        uses: lowlighter/metrics@latest
        with:
          filename: images/codeotd.svg
          base: ""
          output_action: none
          token: ${{ secrets.METRICS_TOKEN }}
          plugin_code: yes
          plugin_code_days: 3
          plugin_code_lines: 12
          plugin_code_load: 400
          plugin_code_visibility: public

      - name: 🦑 General
        if: ${{ success() || failure() }}
        uses: lowlighter/metrics@latest
        with:
          filename: images/general.svg
          token: ${{ secrets.METRICS_TOKEN }}
          base: header, activity, community, repositories, metadata
          base_indepth: yes
          config_timezone: Asia/Jakarta
          output_action: none
          output_condition: data-changed
          plugin_introduction: yes
          plugin_introduction_title: yes
          plugin_isocalendar: yes
          plugin_topics: yes
          plugin_topics_limit: 0
          plugin_topics_mode: icons
          plugin_notable: yes
          plugin_discussions: yes
          plugin_followup: yes
          plugin_followup_archived: yes
          plugin_followup_sections: repositories

      - name: 🦑 GitHub Metrics
        if: ${{ success() || failure() }}
        uses: lowlighter/metrics@latest
        with:
          filename: images/github-metrics.svg
          token: ${{ secrets.METRICS_TOKEN }}
          base: header, activity, community, repositories
          base_indepth: yes
          config_timezone: Asia/Jakarta
          output_action: none
          output_condition: data-changed
          plugin_languages: yes
          plugin_languages_analysis_timeout: 15
          plugin_languages_categories: markup, programming
          plugin_languages_colors: github
          plugin_languages_limit: 8
          plugin_languages_recent_categories: markup, programming
          plugin_languages_recent_days: 14
          plugin_languages_recent_load: 300
          plugin_languages_sections: most-used
          plugin_languages_threshold: 0%

      - name: 🦑 Achievements
        if: ${{ success() || failure() }}
        uses: lowlighter/metrics@latest
        with:
          filename: images/achievements.svg
          token: ${{ secrets.METRICS_TOKEN }}
          base: achievements
          config_timezone: Asia/Jakarta
          output_action: none
          output_condition: data-changed
          plugin_achievements: yes
          plugin_achievements_display: detailed
          plugin_achievements_secrets: yes
          plugin_achievements_threshold: C

      # generates a snake game from a github user (<github_user_name>) contributions graph, output a svg animation at <svg_out_path>
      - name: generate snake.svg
        uses: Platane/snk@master
        with:
          github_user_name: Zxce3
          svg_out_path: images/snake.svg


      - name: Push to github
        run: |
          set +e
          # Create metrics-renders branch if it doesn't exist
          git checkout metrics-renders 2>/dev/null || git checkout -b metrics-renders
          git config user.name "Mandakara Sadewa"
          git config user.email mdswa@zxce3.net
          # Move generated metrics files to images directory
          if [ -d "/metrics_renders/images" ]; then
            sudo mv -f /metrics_renders/images/* ./images/
          fi
          git add --all
          git commit -sm "chore: push metrics" || echo "No changes to commit"
          git push origin metrics-renders
